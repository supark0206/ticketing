spring:
  application:
    name: ticketing

  # 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://localhost:5432/ticketing
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1800000

  # JPA 설정
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379
      password:
      timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # RabbitMQ 설정
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 1
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 2s
          multiplier: 2

  # 메일 설정 (MailHog)
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

# 서버 설정
server:
  port: 8080

# Swagger 설정
springdoc:
  packages-to-scan: com.concertmania.ticketing
  packages-to-exclude: com.concertmania.ticketing.domain.generated
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
  show-actuator: true

# JWT 설정
jwt:
  secret: ${JWT_SECRET:dGlja2V0aW5nLXNlY3JldC1rZXktZm9yLWp3dC10b2tlbi1nZW5lcmF0aW9uLWFuZC12YWxpZGF0aW9uLWluLXNwcmluZy1ib290LWFwcGxpY2F0aW9u}
  token-validity-in-seconds: ${JWT_TOKEN_VALIDITY:86400}  # 24시간

# 로깅 설정
logging:
  level:
    com.concertmania.ticketing: DEBUG
    org.springframework.security: DEBUG
    org.springframework.mail: DEBUG
    org.springframework.amqp: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always