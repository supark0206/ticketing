plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.concertmania'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// JPA + PostgreSQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Actuator + Micrometer
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Swagger / OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:rabbitmq'
	testImplementation 'org.testcontainers:redis'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL 설정
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}

tasks.named('test') {
	useJUnitPlatform()
}